{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","pressedKey","getEventOfGlobalHandler","event","setState","key","document","addEventListener","this","removeEventListener","length","className","Component","ReactDOM","render","getElementById"],"mappings":"2MAMaA,EAAb,4MACEC,MAAyB,CACvBC,WAAY,IAFhB,EAaEC,wBAA0B,SAACC,GACzB,EAAKC,SAAS,CAAEH,WAAW,GAAD,OAAKE,EAAME,QAdzC,uDAKE,WACEC,SAASC,iBAAiB,QAAUC,KAAKN,2BAN7C,kCASE,WACEI,SAASG,oBAAoB,QAAUD,KAAKN,2BAVhD,oBAiBE,WACE,IAAQD,EAAeO,KAAKR,MAApBC,WAER,OAAOA,EAAWS,OAEd,qBAAKC,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,4CAC+BV,EAD/B,SAMF,qBAAKU,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,2CA9BV,GAAyBC,a,MCDzBC,IAASC,OACP,cAAC,EAAD,IACAR,SAASS,eAAe,W","file":"static/js/main.88b9f6b3.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype State = {\n  pressedKey: string;\n};\n\nexport class App extends Component<{}, State> {\n  state: Readonly<State> = {\n    pressedKey: '',\n  };\n\n  componentDidMount() {\n    document.addEventListener('keyup', (this.getEventOfGlobalHandler));\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keyup', (this.getEventOfGlobalHandler));\n  }\n\n  getEventOfGlobalHandler = (event: KeyboardEvent) => {\n    this.setState({ pressedKey: `${event.key}` });\n  };\n\n  render() {\n    const { pressedKey } = this.state;\n\n    return pressedKey.length\n      ? (\n        <div className=\"App\">\n          <p className=\"App__message\">\n            {`The last pressed key is [${pressedKey}]`}\n          </p>\n        </div>\n      )\n      : (\n        <div className=\"App\">\n          <p className=\"App__message\">\n            Nothing was pressed yet\n          </p>\n        </div>\n      );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}